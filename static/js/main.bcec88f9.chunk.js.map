{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","state","element","items","onChange","e","setState","target","name","value","onSubmit","preventDefault","deleteItem","index","console","log","arr","splice","renderTodo","map","item","className","style","cursor","float","color","onClick","this","htmlFor","type","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAEqBA,E,4MAEjBC,MAAQ,CACJC,QAAS,GACTC,MAAQ,I,EAGZC,SAAW,SAAAC,GACP,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOE,S,EAInCC,SAAW,SAAAL,GACPA,EAAEM,iBACF,EAAKL,SAAS,CACVJ,QAAS,GACTC,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwB,CAACD,QAAS,EAAKD,MAAMC,c,EAK1DU,WAAa,SAAAC,GACTC,QAAQC,IAAIF,GACZ,IAAMG,EAAM,EAAKf,MAAME,MAEvBa,EAAIC,OAAOJ,EAAO,GAClB,EAAKP,SAAS,CACVH,MAAOa,K,EAIfE,WAAa,WACT,OAAO,EAAKjB,MAAME,MAAMgB,KAAK,SAACC,EAAMP,GAChC,OACI,qBAAKQ,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,+BAAKD,EAAKlB,QACV,mBAAGmB,UAAU,eACTC,MAAO,CAACC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OAClDC,QAAS,kBAAM,EAAKd,WAAWC,YALXA,O,4CAc5C,WACI,OACI,qCACI,sBAAKQ,UAAU,YAAf,UACI,qBAAKA,UAAU,cAAf,wBACA,qBAAKA,UAAU,YAAf,SACI,uBAAMX,SAAUiB,KAAKjB,SAArB,UAEI,sBAAKW,UAAU,aAAf,UAEI,uBAAOO,QAAQ,UAAf,8BACA,uBAAOC,KAAK,OACRR,UAAU,+BACVb,KAAK,UACLJ,SAAUuB,KAAKvB,SACfK,MAAOkB,KAAK1B,MAAMC,aAK1B,wBAAQmB,UAAU,4BAAlB,oDAOXM,KAAKT,oB,GA5EYY,aCSnBC,MARf,WACE,OACE,qBAAKV,UAAU,YAAf,SACI,cAAC,EAAD,OCMOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bcec88f9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Todo extends Component {\r\n\r\n    state = {\r\n        element: '',\r\n        items : []\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            element: '',\r\n            items: [...this.state.items, {element: this.state.element}]\r\n        })\r\n        // console.log(this.state.items)\r\n    }\r\n\r\n    deleteItem = index => {\r\n        console.log(index);\r\n        const arr = this.state.items;\r\n\r\n        arr.splice(index, 1);\r\n        this.setState({\r\n            items: arr\r\n        })\r\n    }\r\n\r\n    renderTodo = () => {\r\n        return this.state.items.map( (item, index) => {\r\n            return (\r\n                <div className=\"card mb-3\" key={index}>\r\n                    <div className=\"card-body\">\r\n                        <h4>{item.element}\r\n                        <i className=\"fas fa-times\"\r\n                            style={{cursor: 'pointer', float: 'right', color: 'red'}}\r\n                            onClick={() => this.deleteItem(index)}\r\n                        ></i>\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"card my-3\">\r\n                    <div className=\"card-header\">To-Do List</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n    \r\n                            <div className=\"form-group\">\r\n    \r\n                                <label htmlFor=\"element\">Chose à faire</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control form-control-lg\"\r\n                                    name=\"element\" \r\n                                    onChange={this.onChange}\r\n                                    value={this.state.element}\r\n                                />\r\n    \r\n                            </div>\r\n    \r\n                            <button className=\"btn btn-primary btn-block\">\r\n                                Ajouter une chose à faire !\r\n                            </button>\r\n    \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {this.renderTodo()}\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport Todo from './Todo'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}